name: Build and deploy JAR app to Azure Web App - gruppe4-bilabonnement-E24B

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Build with Maven
        run: |
          echo "--- DEBUG INFO ---"
          echo "SPRING_DATASOURCE_URL_IS_SET: ${{ env.SPRING_DATASOURCE_URL != '' }}"
          echo "First 4 chars of SPRING_DATASOURCE_URL: $(echo "$SPRING_DATASOURCE_URL" | cut -c 1-4)"
          echo "SPRING_DATASOURCE_USERNAME_IS_SET: ${{ env.SPRING_DATASOURCE_USERNAME != '' }}"
          echo "--- END DEBUG INFO ---"
          mvn clean install
        env:
          # Her gør du dine GitHub Secrets tilgængelige som miljøvariabler
          # for 'mvn clean install' steppet.
          # Spring Boot vil automatisk forsøge at mappe disse til dine properties.
          # Sørg for, at navnene på dine secrets i GitHub er DB_URL, DB_USERNAME, DB_PASSWORD
          SPRING_DATASOURCE_URL: ${{ secrets.DB_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # Hvis dine placeholders i application.properties er ${DB_URL}, ${USERNAME}, ${PASSWORD}
          # kan du også tilføje dem direkte for en sikkerheds skyld, selvom Spring ofte er smart nok:
          # DB_URL: ${{ secrets.DB_URL }}
          # USERNAME: ${{ secrets.DB_USERNAME }}
          # PASSWORD: ${{ secrets.DB_PASSWORD }}


      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
  
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_805E766D6B894970AD60C2157C3E2742 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B03992C584314CD493A847D98E661D1A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_30D8B33D42CC42259EA599E774547047 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'gruppe4-bilabonnement-E24B'
          slot-name: 'Production'
          package: '*.jar'
          # HER SKAL DINE MILJØVARIABLER SÆTTES FOR DEN KØRENDE APP I AZURE
          app-settings: |
            [
              { "name": "SPRING_DATASOURCE_URL", "value": "${{ secrets.DB_URL }}", "slotSetting": false },
              { "name": "SPRING_DATASOURCE_USERNAME", "value": "${{ secrets.DB_USERNAME }}", "slotSetting": false },
              { "name": "SPRING_DATASOURCE_PASSWORD", "value": "${{ secrets.DB_PASSWORD }}", "slotSetting": false },
              { "name": "JAVA_OPTS", "value": "-Dserver.port=8080", "slotSetting": false } # Eksempel, hvis du vil sætte porten
            ]
